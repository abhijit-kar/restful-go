swagger: '2.0'
info:
  description: '**Work In Progress**<br/>**API Key** is the same as the API Endpoint'
  version: 0.0.1
  title: Unite Society
  contact:
    name: VoraknoTech
    email: reachus@voraknotech.com
externalDocs:
  description: Beautiful Docs
  url: >-
    http://rebilly.github.io/ReDoc/?url=http://www.abhijit-kar.com/unite-society/swagger.yaml
host: custom-library-164415.appspot.com
basePath: /v1
tags:
  - name: Users
    description: Home for every query related to Users
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
x-servers:
  - url: custom-library-164415.appspot.com/v1
    description: Prod Server
  - url: custom-library-164415.appspot.com/v0
    description: Dev Server
paths:
  /users:
    post:
      tags:
        - Users
      summary: Create
      description: Maybe only Society Admin can create an User
      operationId: create-user
      parameters:
        - in: body
          name: body
          description: User Object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: Operation Successfull
  '/users/{uuid}/image':
    post:
      tags:
        - Users
      summary: Upload a Profile Image
      description: ''
      operationId: upload-profile-image
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: uuid
          in: path
          description: UUID of the User
          required: true
          type: string
        - name: file
          in: formData
          description: Profile Image
          required: true
          type: file
      responses:
        '200':
          description: Image Uploaded Successfully
  '/users/{uuid}':
    get:
      tags:
        - Users
      summary: Read
      description: Only a user can get their whole user data
      operationId: get-user
      parameters:
        - name: uuid
          format: uuid
          in: path
          description: The name of the user that needs to be fetched
          required: true
          type: string
      responses:
        '200':
          description: Operation Successfull
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid User UUID supplied
        '404':
          description: User not found
    put:
      tags:
        - Users
      summary: Update
      description: Only the specific user can updated the data
      operationId: update-user
      parameters:
        - name: uuid
          format: uuid
          in: path
          description: The name of the user that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid User UUID supplied
        '404':
          description: User not found
    delete:
      tags:
        - Users
      summary: Delete
      description: Only a Society Admin can delete the user
      operationId: delete-user
      parameters:
        - name: uuid
          format: uuid
          in: path
          description: The name of the user that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid User UUID supplied
        '404':
          description: User not found
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    name: X-API-Key
    in: header
security:
  - ApiKeyAuth: []
definitions:
  User:
    type: object
    properties:
      uuid:
        type: string
        format: uuid
        description: UUID can be used for further queries
      firstname:
        type: string
        description: First Name of the User
      middlename:
        type: string
        description: Middle Name of the User
      lastname:
        type: string
        description: Last Name of the User
      email_ids:
        type: array
        items:
          type: string
          format: email
        description: Validated Email Ids
      phone_numbers:
        type: array
        items:
          type: number
          format: int32
          pattern: '^\d{10}$'
        description: Unformatted Phone Numbers
      dob:
        type: string
        format: date
        description: Date of Birth in UTC Zulu Format
      role:
        type: string
        description: Role of the User
        default: member
        enum:
          - owner
          - member
      image_url:
        type: string
        format: uri
        description: User's Profile Photo
      blood_group:
        type: string
        description: Blood Group of the User
        default: A+
        enum:
          - O−
          - O+
          - A−
          - A+
          - B−
          - B+
          - AB−
          - AB+
      society_uuid:
        type: string
        format: uuid
        description: UUID of the Society the User belongs to
      family_uuid:
        type: string
        format: uuid
        description: UUID of the Family the User belongs to
      date_created:
        type: string
        format: date-time
        description: Date in UTC Zulu Format
      date_updated:
        type: string
        format: date-time
        description: Date in UTC Zulu Format
      status:
        type: string
        description: Status of the User's Account
        default: guest
        enum:
          - verified
          - guest
